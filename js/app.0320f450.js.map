{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Calculator.vue","webpack:///./src/components/ScyllaCloud.vue","webpack:///./src/components/Dropdown.vue","webpack:///./src/components/Dropdown.vue?dab4","webpack:///./src/components/Dropdown.vue?8baa","webpack:///./src/components/ScyllaCloud.vue?9ec5","webpack:///./src/common.ts","webpack:///./src/components/ScyllaCloud.vue?d10f","webpack:///./src/components/DynamoDB.vue","webpack:///./src/components/DynamoDB.vue?2284","webpack:///./src/components/DynamoDB.vue?6515","webpack:///./src/components/Keyspaces.vue","webpack:///./src/components/Keyspaces.vue?c52f","webpack:///./src/components/Keyspaces.vue?4fd7","webpack:///./src/components/Astra.vue","webpack:///./src/components/Astra.vue?cc55","webpack:///./src/components/Astra.vue?688e","webpack:///./src/components/Chart.vue","webpack:///./src/components/Chart.vue?0224","webpack:///./src/Calculator.vue?99e1","webpack:///./src/Calculator.vue?ab08","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","class","for","width","height","viewBox","fill","xmlns","fill-rule","id","workload","reads","type","writes","itemSize","storage","chartId","prices","copyLink","options","scyllaCalcs","calc1","description","scyllaPrices","rivalCalcs","calc2","rivalPrices","data-toggle","data-target","aria-expanded","aria-controls","replicationFactor","readonly","cluster","price","href","total","toLocaleString","undefined","dataTransfer","compute","clusterCapacity","dataset","sustainedLoad","peakLoad","nodes","instanceType","vcpu","memory","disabled","modelValue","$emit","$event","target","opts","props","String","Boolean","default","computed","vm","Array","reduce","prev","v","idx","render","MODE","hoursPerMonth","OPTIMIZED_FOR","CPU","STORAGE","vcpuPerf","CQL","LWT","NoLWT","AWSDataTransferPrice","CompactionOverhead","RAMtoDiskRatio","modes","optimizeFor","instanceTypes","aws","hourlyPrice","reservedPrice","ondemandPrice","toMonthlyPrice","clusterResources","itemSizePerfFactor","selectClusterInstances","specs","optimizedFor","instances","validSpecs","range","lowestPrice","chain","map","min","filter","spec","sortBy","head","components","dropdown","Dropdown","dimensions","fromEntries","entries","estimatedResources","perf","vcpus","Math","ceil","totalResources","replicationTraffic","onDemand","reserved","ops","provisionedPricing","wcu","rcu","reservedPricing","onDemandPricing","storagePricing","provisioned","_prices","database","tier","tiers","concat","capacityUnits","clusterPrice","clusterSpec","console","log","isEmpty","this","$slots","toGraphData","columns","color","startsWith","mounted","_chart","generate","bindto","point","show","axis","x","label","xlabel","y","ylabel","watch","_data","load","unload","ScyllaCloud","DynamoDB","Keyspaces","Astra","Chart","methods","url","URL","location","forEach","k","searchParams","set","toString","navigator","clipboard","writeText","then","document","querySelector","classList","add","setTimeout","remove","query","URLSearchParams","search","getParam","param","defaultValue","toNumber","mapValues","errorCaptured","err","instance","info","error","Calculator","mount"],"mappings":"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","file":"js/app.0320f450.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <form>\n                    <div class=\"row form-group\">\n                        <label class=\"col-sm-6 col-form-label\" for=\"reads\">Read ops/sec</label><input v-model=\"workload.reads\" class=\"col-sm-3 form-control\" type=\"number\" name=\"reads\" id=\"reads\">\n                    </div>\n                    <div class=\"row form-group\">\n                        <label class=\"col-sm-6 col-form-label\" for=\"writes\">Write ops/sec</label><input v-model=\"workload.writes\" class=\"col-sm-3 form-control\" type=\"number\" name=\"writes\" id=\"writes\">\n                    </div>\n                    <div class=\"row form-group\">\n                        <label class=\"col-sm-6 col-form-label\" for=\"item-size\">Average item size (KB)</label><input v-model=\"workload.itemSize\" class=\"col-sm-3 form-control\" type=\"number\" name=\"items-size\" id=\"item-size\">\n                    </div>\n                    <div class=\"row form-group\"><label class=\"col-sm-6 col-form-label\" for=\"storage-size\">Storage set size (GB)</label><input class=\"col-sm-3 form-control\" type=\"number\" v-model=\"workload.storage\" name=\"storage-size\" id=\"storage-size\"></div>\n                </form>\n            </div>\n            <div class=\"col-6\">\n                <Chart chartId=\"price-comparison\" :data=\"prices\"></Chart>\n            </div>\n        </div>\n        <div class=\"row\">\n            <button class=\"btn\" @click=\"copyLink()\">\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-share\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" d=\"M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z\"/>\n                </svg>\n                Share\n            </button>\n            <div class=\"alert alert-success fade\" id=\"copy-indicator\">Copied!</div>\n        </div>\n        <hr>\n        <div class=\"row\">\n            <div class=\"col-6 m-x-1\">\n                <dropdown :options=\"scyllaCalcs\" v-model=\"calc1\" description=\"Scylla offering\"></dropdown>\n                <component :is=\"calc1\" :workload=\"workload\" v-model=\"scyllaPrices\"></component>\n            </div>\n            <div class=\"col-6 m-x-1\">\n                <dropdown :options=\"rivalCalcs\" v-model=\"calc2\" description=\"Rival offering\"></dropdown>\n                <component :is=\"calc2\" :workload=\"workload\" v-model=\"rivalPrices\"></component>\n            </div>\n        </div>\n        <div class=\"row\">\n            <p><small>Prices are monthly, but reserved offerings require a 1 year subscription period.</small></p>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport ScyllaCloud from './components/ScyllaCloud.vue'\nimport DynamoDB from './components/DynamoDB.vue'\nimport Keyspaces from './components/Keyspaces.vue'\nimport Dropdown from './components/Dropdown.vue'\nimport Astra from './components/Astra.vue'\nimport _ from 'lodash'\nimport {ComponentPublicInstance, DefineComponent, defineComponent} from 'vue'\nimport Chart from './components/Chart.vue'\n\nexport default defineComponent({\n    data() {\n        return {\n            scyllaCalcs: {'Scylla cloud': 'ScyllaCloud'},\n            rivalCalcs: {'DynamoDB': 'DynamoDB', 'Keyspaces': 'keyspaces', 'Astra': 'Astra'},\n            workload: {writes: 10000, reads: 50000, storage: 200, itemSize: 1},\n            calc1: 'ScyllaCloud',\n            calc2: 'DynamoDB',\n            scyllaPrices: [],\n            rivalPrices: []\n        }\n    },\n    components: {\n        ScyllaCloud,\n        DynamoDB,\n        Keyspaces,\n        Astra,\n        Dropdown,\n        Chart\n    },\n    methods: {\n        copyLink() {\n            const url = new URL(window.location.href)\n            _.forEach(this.workload, (v, k) => {\n                url.searchParams.set(k, v.toString())\n            })\n\n            navigator.clipboard.writeText(url.toString())\n            .then(() => {\n                document.querySelector('#copy-indicator')?.classList.add('show')\n                setTimeout(() => {\n                    document.querySelector('#copy-indicator')?.classList.remove('show')\n                }, 1000)\n            })\n        }\n    },\n    mounted() {\n        const query = new URLSearchParams(window.location.search)\n        const getParam = (param: string, defaultValue: number) => _.toNumber(query.get(param) ?? defaultValue)\n        this.workload = _.mapValues(this.workload, (v, k) => getParam(k, v))\n    },\n    errorCaptured(err: unknown, instance: ComponentPublicInstance | null, info: string): boolean {\n        console.error(\"Error occurred in Astra component \" + err)\n        return false\n    },\n    computed: {\n        prices(vm: DefineComponent) {\n            const _prices: [string, number][] = []\n            for (const price of vm.scyllaPrices) {\n                const key: string = 'Scylla ' + price.name\n                _prices.push([key, price.total])\n            }\n\n            for (const price of vm.rivalPrices) {\n                _prices.push([price.database + ' ' + price.name, price.total])\n            }\n            return _prices\n        }\n    }\n})\n</script>\n","<template>\n    <div class=\"pricing container\" id=\"scylla-cloud\">\n        <h1>Scylla cloud</h1>\n        <form>\n            <!-- <dropdown v-model=\"mode\" :options=\"modes\" description=\"Mode\"></dropdown> -->\n            <dropdown v-model=\"replicationFactor\" readonly :options=\"[3, 4, 5]\" description=\"Replication factor\"></dropdown>\n        </form>\n        <template v-if=\"cluster\">\n        <template v-for=\"price in prices\" :key=\"price.id\">\n        <div class=\"row container\">\n            <a data-toggle=\"collapse\" :href=\"'#scylla-' + price.id + '-price'\" aria-expanded=\"false\" :aria-controls=\"'scylla' + price.id + '-price'\">{{price.name}}: {{price.total.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</a>\n            <div class=\"collapse\" :id=\"'scylla-' + price.id + '-price'\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Cross AZ data transfer (replication)</td>\n                            <td>{{price.dataTransfer.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                        </tr>\n                        <tr>\n                            <td>Cluster nodes</td>\n                            <td>{{price.compute.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </template>\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#scylla-details\" aria-expanded=\"true\" aria-controls=\"scylla-details\">More details</button>\n            </div>\n            <div class=\"collapse\" id=\"scylla-details\">\n                <h3>Cluster capacity</h3>\n                <table class=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Storage (post replication)</td>\n                            <td>{{clusterCapacity.dataset.toLocaleString()}} GB</td>\n                        </tr>\n                        <tr>\n                            <td>Sustained throughput</td>\n                            <td>{{clusterCapacity.sustainedLoad.toLocaleString()}} ops/sec</td>\n                        </tr>\n                        <tr>\n                            <td>Peak throughput</td>\n                            <td>{{clusterCapacity.peakLoad.toLocaleString()}} ops/sec</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>Cluster specs</h3>\n                <table class=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Nodes</td>\n                            <td>{{cluster.nodes}} x {{cluster.instanceType.name}} <small>({{cluster.instanceType.vcpu.toLocaleString()}} vCPUs, {{cluster.instanceType.memory.toLocaleString()}}GB RAM, {{cluster.instanceType.storage.toLocaleString()}}GB storage)</small></td>\n                        </tr>\n                        <tr>\n                            <td>Total raw storage</td>\n                            <td>{{clusterCapacity.storage.toLocaleString()}}GB</td>\n                        </tr>\n                        <tr>\n                            <td>Total vCPU</td>\n                            <td>{{clusterCapacity.vcpu.toLocaleString()}}</td>\n                        </tr>\n                    </tbody>\n                </table>            \n            </div>\n        </div>\n    </template>\n    <div v-else class=\"alert alert-warning\">\n        Could not find suitable configuration\n    </div>\n</div>    \n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport Dropdown from './Dropdown.vue'\nimport { WorkloadSpec, hoursPerMonth } from '../common'\nimport _ from 'lodash'\n\nenum MODE {\n    CQL = \"CQL\",\n    LWT = \"LWT\",\n    NoLWT = \"NoLWT\"\n}\n\nconst OPTIMIZED_FOR = {\n    CPU: \"vcpu\",\n    STORAGE: \"storage\"\n}\n\nexport interface PerfModeData {\n    reads: number;\n    writes: number;\n}\n\n\nconst vcpuPerf: Record<MODE, PerfModeData> = {\n    [MODE.CQL]: {\n        reads: 8000,\n        writes: 10000\n    },\n    [MODE.LWT]: {\n        writes: 1200,\n        reads: 4000\n    },\n    [MODE.NoLWT]: {\n        writes: 6000,\n        reads: 4000\n    }\n}\n\nconst AWSDataTransferPrice = 0.01 // GB/month\nconst CompactionOverhead = 2\nconst RAMtoDiskRatio = 30\n\nconst modes: Record<string, MODE> = {\n    \"CQL\": MODE.CQL,\n    \"Alternator with LWT\": MODE.LWT,\n    \"Alternator without LWT\": MODE.NoLWT\n}\nconst data = {\n        modes,\n        mode: MODE.CQL,\n        replicationFactor: 3,\n        optimizeFor: OPTIMIZED_FOR.CPU\n    }\n\ninterface ResourceSpec {\n    readonly vcpu: number;\n    readonly memory: number;\n    readonly storage: number;\n}\n\ninterface Instance extends ResourceSpec {\n    readonly name: string; \n    readonly hourlyPrice: HourlyPrice;\n    readonly reservedPrice: MonthlyPrice;\n}\n\ninterface ClusterSpec {\n    readonly nodes: number;\n    readonly instanceType: Instance;\n}\n\ntype HourlyPrice = number\ntype MonthlyPrice = number\n\nconst instanceTypes = {\n    aws: [\n        {name: 'i3.large', vcpu: 2, memory: 15.25, storage: 475, hourlyPrice: 0.327, reservedPrice: 155},\n        {name: 'i3.xlarge', vcpu: 4, memory: 30.5, storage: 950, hourlyPrice: 0.654, reservedPrice: 310},\n        {name: 'i3.2xlarge', vcpu: 8, memory: 61, storage: 1900, hourlyPrice: 1.309, reservedPrice: 620},\n        {name: 'i3.4xlarge', vcpu: 16, memory: 122, storage: 3800, hourlyPrice: 2.618, reservedPrice: 1240},\n        {name: 'i3.8xlarge', vcpu: 32, memory: 244, storage: 7600, hourlyPrice: 5.236, reservedPrice: 2480},\n        {name: 'i3.16xlarge', vcpu: 64, memory: 488, storage: 15200, hourlyPrice: 10.471, reservedPrice: 4960},\n        {name: 'i3en.large', vcpu: 2, memory: 16, storage: 1250, hourlyPrice: 0.568, reservedPrice: 269.83},\n        {name: 'i3en.xlarge', vcpu: 4, memory: 32, storage: 2500, hourlyPrice: 1.137, reservedPrice: 539.75},\n        {name: 'i3en.2xlarge', vcpu: 8, memory: 64, storage: 5000, hourlyPrice: 2.274, reservedPrice: 1079.5},\n        {name: 'i3en.3xlarge', vcpu: 12, memory: 96, storage: 7500, hourlyPrice: 3.411, reservedPrice: 1619.25},\n        {name: 'i3en.6xlarge', vcpu: 24, memory: 192, storage: 15000, hourlyPrice: 6.822, reservedPrice: 3238.42},\n        {name: 'i3en.12xlarge', vcpu: 48, memory: 384, storage: 30000, hourlyPrice: 13.643, reservedPrice: 6476.83},\n        {name: 'i3en.24xlarge', vcpu: 96, memory: 768, storage: 60000, hourlyPrice: 27.286, reservedPrice: 12953.75}\n    ]\n}\n\nfunction ondemandPrice(cluster: ClusterSpec): HourlyPrice {\n    return cluster.nodes * cluster.instanceType.hourlyPrice\n}\n\nfunction reservedPrice(cluster: ClusterSpec): MonthlyPrice {\n    return cluster.nodes * cluster.instanceType.reservedPrice\n}\n\nfunction toMonthlyPrice(price: HourlyPrice): MonthlyPrice {\n    return price * hoursPerMonth\n}\n\nfunction clusterResources(cluster: ClusterSpec): ResourceSpec {\n    return {storage: cluster.instanceType.storage*cluster.nodes, vcpu: cluster.instanceType.vcpu*cluster.nodes, memory:cluster.instanceType.memory*cluster.nodes}\n}\n\nfunction itemSizePerfFactor(itemSize: number): number {\n    if (itemSize <= 10) {\n        return 1\n    } else if (itemSize < 100) {\n        return 0.75\n    } else if (itemSize < 1000) {\n        return 0.5\n    } else {\n        return 0.25\n    }\n}\n\n/* Cluster size recommendations based on the optimization target:\n- performance (CPU) - select nodes with enough storage and max cpu\n- storage - select nodes with enough cpu and max storage\n- cost - select nodes with just enough cpu and storage, even if smaller nodes\n*/\n\nfunction selectClusterInstances<K extends keyof Instance>(specs: ResourceSpec, replicationFactor: number, optimizedFor: K): ClusterSpec | undefined {\n    const instances = instanceTypes.aws\n    const validSpecs = []\n\n    for (const n of _.range(replicationFactor, 100*replicationFactor, replicationFactor)) {\n        for (const instanceType of instances) {\n            if (instanceType.vcpu * n >= specs.vcpu && instanceType.memory * n >= specs.memory && instanceType.storage * n >= specs.storage) {\n                validSpecs.push({instanceType, nodes: n})\n            }\n        }\n    }\n\n    const lowestPrice = _.chain(validSpecs).map(ondemandPrice).min().value()\n    const x = _.chain(validSpecs).filter()\n\n    return _.chain(validSpecs)\n        .filter((spec) => ondemandPrice(spec) < (lowestPrice * 1.2))\n        .sortBy('nodes')\n        .head()\n        .value()\n\n}\n\nexport default {\n    data() {\n        return data\n    },\n    props: ['workload'],\n    components: {\n        dropdown: Dropdown\n    },\n    computed: {\n        dimensions() {\n            return Object.fromEntries(Object.entries(OPTIMIZED_FOR))\n        },\n        estimatedResources: (vm: Vue.DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            const perf = vcpuPerf[vm.mode as MODE]\n            const vcpus = Math.ceil((workload.reads / perf.reads + workload.writes / perf.writes)*replicationFactor/itemSizePerfFactor(workload.itemSize))\n            const memory = Math.ceil(workload.storage / RAMtoDiskRatio)*replicationFactor\n            const storage = workload.storage * replicationFactor * CompactionOverhead\n            return {vcpu: vcpus, storage, memory}\n        },\n        cluster: (vm: Vue.DefineComponent): ClusterSpec | undefined => {\n            return selectClusterInstances(vm.estimatedResources, vm.replicationFactor, vm.optimizeFor)\n        },\n        clusterCapacity: (vm: Vue.DefineComponent) => {\n            const cluster: ClusterSpec = vm.cluster\n            const perf = vcpuPerf[vm.mode as MODE]\n            const totalResources = clusterResources(cluster)\n            const dataset = totalResources.storage / vm.replicationFactor / CompactionOverhead  \n            const peakLoad = totalResources.vcpu * (perf.writes + perf.reads)/2 / vm.replicationFactor\n            const sustainedLoad = peakLoad * 0.66\n\n            return {sustainedLoad, peakLoad, dataset, ...totalResources}\n        },\n        prices: (vm: Vue.DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            // currently, Scylla requires each replica to be in a different AZ\n            const replicationTraffic = (workload.reads + workload.writes)*workload.itemSize*(replicationFactor - 1) / 1E6\n            const dataTransfer = replicationTraffic * AWSDataTransferPrice\n            const cluster: ClusterSpec = vm.cluster!\n            const onDemand = toMonthlyPrice(ondemandPrice(cluster))\n            const reserved = reservedPrice(cluster)\n            const prices = [\n                {id: 'ondemand', name: 'On demand', compute: onDemand, dataTransfer, total: onDemand + dataTransfer},\n                {id: 'reserved', name: 'Reserved', compute: reserved, dataTransfer, total: reserved + dataTransfer}\n            ]\n            vm.$emit('update:modelValue', prices)\n\n            return prices\n        }\n    }\n}\n\n/* TODO: \n4. show peak workload capability \n*/\n</script>\n\n ","<template>\n    <div class=\"form-group row\">\n        <label class=\"col-form-label col\" :for=\"name\">{{description}}</label>\n        <select :disabled=\"readonly\" class=\"form-control col\" :value=\"modelValue\" @input=\"$emit('update:modelValue', $event.target.value)\" :name=\"name\" :id=\"name\">\n            <option v-for=\"(value, name) in opts\" :value=\"value\" v-bind:key=\"name\">{{name}}</option>\n        </select>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { PropType, DefineComponent } from 'vue'\nexport default {\n    props: {\n        options: {\n        },\n        description: {\n            type: String\n        },\n        modelValue: {\n            type: String\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        opts: (vm: DefineComponent) => {\n            if (vm.options instanceof Array) {\n                return vm.options.reduce((prev, v, idx) => {\n                    return {...prev, [v]: v}\n                }, {})\n            } else {\n                return vm.options\n            }\n        }\n    }  \n}\n</script>","\nimport { PropType, DefineComponent } from 'vue'\nexport default {\n    props: {\n        options: {\n        },\n        description: {\n            type: String\n        },\n        modelValue: {\n            type: String\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    computed: {\n        opts: (vm: DefineComponent) => {\n            if (vm.options instanceof Array) {\n                return vm.options.reduce((prev, v, idx) => {\n                    return {...prev, [v]: v}\n                }, {})\n            } else {\n                return vm.options\n            }\n        }\n    }  \n}\n","import { render } from \"./Dropdown.vue?vue&type=template&id=6374ae94&bindings={\\\"options\\\":\\\"props\\\",\\\"description\\\":\\\"props\\\",\\\"modelValue\\\":\\\"props\\\",\\\"readonly\\\":\\\"props\\\",\\\"opts\\\":\\\"options\\\"}\"\nimport script from \"./Dropdown.vue?vue&type=script&lang=ts\"\nexport * from \"./Dropdown.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport Vue from 'vue'\nimport Dropdown from './Dropdown.vue'\nimport { WorkloadSpec, hoursPerMonth } from '../common'\nimport _ from 'lodash'\n\nenum MODE {\n    CQL = \"CQL\",\n    LWT = \"LWT\",\n    NoLWT = \"NoLWT\"\n}\n\nconst OPTIMIZED_FOR = {\n    CPU: \"vcpu\",\n    STORAGE: \"storage\"\n}\n\nexport interface PerfModeData {\n    reads: number;\n    writes: number;\n}\n\n\nconst vcpuPerf: Record<MODE, PerfModeData> = {\n    [MODE.CQL]: {\n        reads: 8000,\n        writes: 10000\n    },\n    [MODE.LWT]: {\n        writes: 1200,\n        reads: 4000\n    },\n    [MODE.NoLWT]: {\n        writes: 6000,\n        reads: 4000\n    }\n}\n\nconst AWSDataTransferPrice = 0.01 // GB/month\nconst CompactionOverhead = 2\nconst RAMtoDiskRatio = 30\n\nconst modes: Record<string, MODE> = {\n    \"CQL\": MODE.CQL,\n    \"Alternator with LWT\": MODE.LWT,\n    \"Alternator without LWT\": MODE.NoLWT\n}\nconst data = {\n        modes,\n        mode: MODE.CQL,\n        replicationFactor: 3,\n        optimizeFor: OPTIMIZED_FOR.CPU\n    }\n\ninterface ResourceSpec {\n    readonly vcpu: number;\n    readonly memory: number;\n    readonly storage: number;\n}\n\ninterface Instance extends ResourceSpec {\n    readonly name: string; \n    readonly hourlyPrice: HourlyPrice;\n    readonly reservedPrice: MonthlyPrice;\n}\n\ninterface ClusterSpec {\n    readonly nodes: number;\n    readonly instanceType: Instance;\n}\n\ntype HourlyPrice = number\ntype MonthlyPrice = number\n\nconst instanceTypes = {\n    aws: [\n        {name: 'i3.large', vcpu: 2, memory: 15.25, storage: 475, hourlyPrice: 0.327, reservedPrice: 155},\n        {name: 'i3.xlarge', vcpu: 4, memory: 30.5, storage: 950, hourlyPrice: 0.654, reservedPrice: 310},\n        {name: 'i3.2xlarge', vcpu: 8, memory: 61, storage: 1900, hourlyPrice: 1.309, reservedPrice: 620},\n        {name: 'i3.4xlarge', vcpu: 16, memory: 122, storage: 3800, hourlyPrice: 2.618, reservedPrice: 1240},\n        {name: 'i3.8xlarge', vcpu: 32, memory: 244, storage: 7600, hourlyPrice: 5.236, reservedPrice: 2480},\n        {name: 'i3.16xlarge', vcpu: 64, memory: 488, storage: 15200, hourlyPrice: 10.471, reservedPrice: 4960},\n        {name: 'i3en.large', vcpu: 2, memory: 16, storage: 1250, hourlyPrice: 0.568, reservedPrice: 269.83},\n        {name: 'i3en.xlarge', vcpu: 4, memory: 32, storage: 2500, hourlyPrice: 1.137, reservedPrice: 539.75},\n        {name: 'i3en.2xlarge', vcpu: 8, memory: 64, storage: 5000, hourlyPrice: 2.274, reservedPrice: 1079.5},\n        {name: 'i3en.3xlarge', vcpu: 12, memory: 96, storage: 7500, hourlyPrice: 3.411, reservedPrice: 1619.25},\n        {name: 'i3en.6xlarge', vcpu: 24, memory: 192, storage: 15000, hourlyPrice: 6.822, reservedPrice: 3238.42},\n        {name: 'i3en.12xlarge', vcpu: 48, memory: 384, storage: 30000, hourlyPrice: 13.643, reservedPrice: 6476.83},\n        {name: 'i3en.24xlarge', vcpu: 96, memory: 768, storage: 60000, hourlyPrice: 27.286, reservedPrice: 12953.75}\n    ]\n}\n\nfunction ondemandPrice(cluster: ClusterSpec): HourlyPrice {\n    return cluster.nodes * cluster.instanceType.hourlyPrice\n}\n\nfunction reservedPrice(cluster: ClusterSpec): MonthlyPrice {\n    return cluster.nodes * cluster.instanceType.reservedPrice\n}\n\nfunction toMonthlyPrice(price: HourlyPrice): MonthlyPrice {\n    return price * hoursPerMonth\n}\n\nfunction clusterResources(cluster: ClusterSpec): ResourceSpec {\n    return {storage: cluster.instanceType.storage*cluster.nodes, vcpu: cluster.instanceType.vcpu*cluster.nodes, memory:cluster.instanceType.memory*cluster.nodes}\n}\n\nfunction itemSizePerfFactor(itemSize: number): number {\n    if (itemSize <= 10) {\n        return 1\n    } else if (itemSize < 100) {\n        return 0.75\n    } else if (itemSize < 1000) {\n        return 0.5\n    } else {\n        return 0.25\n    }\n}\n\n/* Cluster size recommendations based on the optimization target:\n- performance (CPU) - select nodes with enough storage and max cpu\n- storage - select nodes with enough cpu and max storage\n- cost - select nodes with just enough cpu and storage, even if smaller nodes\n*/\n\nfunction selectClusterInstances<K extends keyof Instance>(specs: ResourceSpec, replicationFactor: number, optimizedFor: K): ClusterSpec | undefined {\n    const instances = instanceTypes.aws\n    const validSpecs = []\n\n    for (const n of _.range(replicationFactor, 100*replicationFactor, replicationFactor)) {\n        for (const instanceType of instances) {\n            if (instanceType.vcpu * n >= specs.vcpu && instanceType.memory * n >= specs.memory && instanceType.storage * n >= specs.storage) {\n                validSpecs.push({instanceType, nodes: n})\n            }\n        }\n    }\n\n    const lowestPrice = _.chain(validSpecs).map(ondemandPrice).min().value()\n    const x = _.chain(validSpecs).filter()\n\n    return _.chain(validSpecs)\n        .filter((spec) => ondemandPrice(spec) < (lowestPrice * 1.2))\n        .sortBy('nodes')\n        .head()\n        .value()\n\n}\n\nexport default {\n    data() {\n        return data\n    },\n    props: ['workload'],\n    components: {\n        dropdown: Dropdown\n    },\n    computed: {\n        dimensions() {\n            return Object.fromEntries(Object.entries(OPTIMIZED_FOR))\n        },\n        estimatedResources: (vm: Vue.DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            const perf = vcpuPerf[vm.mode as MODE]\n            const vcpus = Math.ceil((workload.reads / perf.reads + workload.writes / perf.writes)*replicationFactor/itemSizePerfFactor(workload.itemSize))\n            const memory = Math.ceil(workload.storage / RAMtoDiskRatio)*replicationFactor\n            const storage = workload.storage * replicationFactor * CompactionOverhead\n            return {vcpu: vcpus, storage, memory}\n        },\n        cluster: (vm: Vue.DefineComponent): ClusterSpec | undefined => {\n            return selectClusterInstances(vm.estimatedResources, vm.replicationFactor, vm.optimizeFor)\n        },\n        clusterCapacity: (vm: Vue.DefineComponent) => {\n            const cluster: ClusterSpec = vm.cluster\n            const perf = vcpuPerf[vm.mode as MODE]\n            const totalResources = clusterResources(cluster)\n            const dataset = totalResources.storage / vm.replicationFactor / CompactionOverhead  \n            const peakLoad = totalResources.vcpu * (perf.writes + perf.reads)/2 / vm.replicationFactor\n            const sustainedLoad = peakLoad * 0.66\n\n            return {sustainedLoad, peakLoad, dataset, ...totalResources}\n        },\n        prices: (vm: Vue.DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            // currently, Scylla requires each replica to be in a different AZ\n            const replicationTraffic = (workload.reads + workload.writes)*workload.itemSize*(replicationFactor - 1) / 1E6\n            const dataTransfer = replicationTraffic * AWSDataTransferPrice\n            const cluster: ClusterSpec = vm.cluster!\n            const onDemand = toMonthlyPrice(ondemandPrice(cluster))\n            const reserved = reservedPrice(cluster)\n            const prices = [\n                {id: 'ondemand', name: 'On demand', compute: onDemand, dataTransfer, total: onDemand + dataTransfer},\n                {id: 'reserved', name: 'Reserved', compute: reserved, dataTransfer, total: reserved + dataTransfer}\n            ]\n            vm.$emit('update:modelValue', prices)\n\n            return prices\n        }\n    }\n}\n\n/* TODO: \n4. show peak workload capability \n*/\n","export interface WorkloadSpec {\n    reads: number;\n    writes: number;\n    storage: number;\n    itemSize: number;\n}\n\nexport const hoursPerMonth = 730\n","import { render } from \"./ScyllaCloud.vue?vue&type=template&id=3f0dc458&bindings={\\\"workload\\\":\\\"props\\\",\\\"dimensions\\\":\\\"options\\\",\\\"estimatedResources\\\":\\\"options\\\",\\\"cluster\\\":\\\"options\\\",\\\"clusterCapacity\\\":\\\"options\\\",\\\"prices\\\":\\\"options\\\"}\"\nimport script from \"./ScyllaCloud.vue?vue&type=script&lang=ts\"\nexport * from \"./ScyllaCloud.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n    <div class=\"pricing container\" id=\"dynamodb\">\n    <h1>DynamoDB</h1>\n    <template v-for=\"price in prices\" :key=\"price.id\">\n        <div class=\"row container\">\n            <a data-toggle=\"collapse\" :href=\"'#dynamodb-' + price.id + '-price'\" aria-expanded=\"false\" :aria-controls=\"'dynamodb-' + price.id + '-price'\">{{price.name}}: {{price.total.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</a>\n            <table class=\"table collapse\" :id=\"price.id + '-price'\">\n                <tbody>\n                <tr>\n                    <td>Storage</td>\n                    <td>{{price.storage.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                </tr>\n                <tr>\n                    <td>Workload (operations)</td>\n                    <td>{{price.ops.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>        \n    </template>\n    </div>    \n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport {hoursPerMonth} from '../common'\n\n// hourly\nconst provisionedPricing = {\n    wcu: 0.00065,\n    rcu: 0.00013\n}\n\nconst reservedPricing = {\n    wcu: 0.000299232876712328,\n    rcu: 5.92E-05\n}\n\n// per 1M ops\nconst onDemandPricing = {\n    wcu: 1.25,\n    rcu: 0.25\n}\n\nconst storagePricing = 0.25 // GB/month\n\nexport default {\n    props: [\"workload\"],\n    computed: {\n        prices: (vm: Vue.DefineComponent) => {\n            const wcu = Math.ceil(vm.workload.itemSize) * vm.workload.writes\n            const rcu = Math.ceil(vm.workload.itemSize/4)*vm.workload.reads\n            const storage = vm.workload.storage * storagePricing\n            const onDemand = (rcu * onDemandPricing.rcu + wcu * onDemandPricing.wcu) * 3600* hoursPerMonth / 1E6\n            const provisioned = (wcu * provisionedPricing.wcu + rcu * provisionedPricing.rcu) * hoursPerMonth\n            const reserved = (wcu * reservedPricing.wcu + rcu * reservedPricing.rcu) * hoursPerMonth\n\n            const _prices = [\n                {id: 'dynamodb-on-demand', name: 'On demand', total: storage + onDemand, storage, ops: onDemand, database: 'DynamoDB'},\n                {id: 'dynamodb-provisioned', name: 'Provisioned', total: storage + provisioned, storage, ops: provisioned, database: 'DynamoDB'},\n                {id: 'dynamodb-reserved', name: 'Provisioned (1y reserved)', total: storage + reserved, storage, ops: reserved, database: 'DynamoDB'}\n            ]\n\n            vm.$emit('update:modelValue', _prices)\n\n            return _prices\n        }\n    }\n}\n</script>","\nimport Vue from 'vue'\nimport {hoursPerMonth} from '../common'\n\n// hourly\nconst provisionedPricing = {\n    wcu: 0.00065,\n    rcu: 0.00013\n}\n\nconst reservedPricing = {\n    wcu: 0.000299232876712328,\n    rcu: 5.92E-05\n}\n\n// per 1M ops\nconst onDemandPricing = {\n    wcu: 1.25,\n    rcu: 0.25\n}\n\nconst storagePricing = 0.25 // GB/month\n\nexport default {\n    props: [\"workload\"],\n    computed: {\n        prices: (vm: Vue.DefineComponent) => {\n            const wcu = Math.ceil(vm.workload.itemSize) * vm.workload.writes\n            const rcu = Math.ceil(vm.workload.itemSize/4)*vm.workload.reads\n            const storage = vm.workload.storage * storagePricing\n            const onDemand = (rcu * onDemandPricing.rcu + wcu * onDemandPricing.wcu) * 3600* hoursPerMonth / 1E6\n            const provisioned = (wcu * provisionedPricing.wcu + rcu * provisionedPricing.rcu) * hoursPerMonth\n            const reserved = (wcu * reservedPricing.wcu + rcu * reservedPricing.rcu) * hoursPerMonth\n\n            const _prices = [\n                {id: 'dynamodb-on-demand', name: 'On demand', total: storage + onDemand, storage, ops: onDemand, database: 'DynamoDB'},\n                {id: 'dynamodb-provisioned', name: 'Provisioned', total: storage + provisioned, storage, ops: provisioned, database: 'DynamoDB'},\n                {id: 'dynamodb-reserved', name: 'Provisioned (1y reserved)', total: storage + reserved, storage, ops: reserved, database: 'DynamoDB'}\n            ]\n\n            vm.$emit('update:modelValue', _prices)\n\n            return _prices\n        }\n    }\n}\n","import { render } from \"./DynamoDB.vue?vue&type=template&id=6f7a9e02&bindings={\\\"workload\\\":\\\"props\\\",\\\"prices\\\":\\\"options\\\"}\"\nimport script from \"./DynamoDB.vue?vue&type=script&lang=ts\"\nexport * from \"./DynamoDB.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n   <div class=\"container pricing\" id=\"keyspaces\">\n    <h1>AWS Keyspaces</h1>   \n    </div> \n    <template v-for=\"price in prices\" :key=\"price.id\">\n        <div class=\"row container\">\n            <a data-toggle=\"collapse\" :href=\"'#dynamodb-' + price.id + '-price'\" aria-expanded=\"false\" :aria-controls=\"'dynamodb-' + price.id + '-price'\">{{price.name}}: {{price.total.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</a>\n            <table class=\"table collapse\" :id=\"'dynamodb-' + price.id + '-price'\">\n                <tbody>\n                <tr>\n                    <td>Storage</td>\n                    <td>{{price.storage.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                </tr>\n                <tr>\n                    <td>Workload (operations)</td>\n                    <td>{{price.ops.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>        \n    </template>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport {hoursPerMonth} from '../common'\n\n// hourly\nconst provisionedPricing = {\n    wcu: 0.00075,\n    rcu: 0.00015\n}\n\n// per 1M ops\nconst onDemandPricing = {\n    wcu: 1.45,\n    rcu: 0.29\n}\n\nconst storagePricing = 0.3 // GB/month\n\nexport default {\n    props: [\"workload\"],\n    computed: {\n        prices: (vm: Vue.DefineComponent) => {\n            const wcu = Math.ceil(vm.workload.itemSize) * vm.workload.writes\n            const rcu = Math.ceil(vm.workload.itemSize/4)*vm.workload.reads\n            const storage = vm.workload.storage * storagePricing\n            const onDemand = (rcu * onDemandPricing.rcu + wcu * onDemandPricing.wcu) * 3600* hoursPerMonth / 1E6\n            const provisioned = (wcu * provisionedPricing.wcu + rcu * provisionedPricing.rcu) * hoursPerMonth\n\n            const _prices = [\n                {id: 'on-demand', name: 'On demand', total: storage + onDemand, storage, ops: onDemand, database: 'Keyspaces'},\n                {id: 'provisioned', name: 'Provisioned', total: storage + provisioned, storage, ops: provisioned, database: 'Keyspaces'},\n            ]\n\n            vm.$emit('update:modelValue', _prices)\n            return _prices\n        }\n    }\n}\n</script>","\nimport Vue from 'vue'\nimport {hoursPerMonth} from '../common'\n\n// hourly\nconst provisionedPricing = {\n    wcu: 0.00075,\n    rcu: 0.00015\n}\n\n// per 1M ops\nconst onDemandPricing = {\n    wcu: 1.45,\n    rcu: 0.29\n}\n\nconst storagePricing = 0.3 // GB/month\n\nexport default {\n    props: [\"workload\"],\n    computed: {\n        prices: (vm: Vue.DefineComponent) => {\n            const wcu = Math.ceil(vm.workload.itemSize) * vm.workload.writes\n            const rcu = Math.ceil(vm.workload.itemSize/4)*vm.workload.reads\n            const storage = vm.workload.storage * storagePricing\n            const onDemand = (rcu * onDemandPricing.rcu + wcu * onDemandPricing.wcu) * 3600* hoursPerMonth / 1E6\n            const provisioned = (wcu * provisionedPricing.wcu + rcu * provisionedPricing.rcu) * hoursPerMonth\n\n            const _prices = [\n                {id: 'on-demand', name: 'On demand', total: storage + onDemand, storage, ops: onDemand, database: 'Keyspaces'},\n                {id: 'provisioned', name: 'Provisioned', total: storage + provisioned, storage, ops: provisioned, database: 'Keyspaces'},\n            ]\n\n            vm.$emit('update:modelValue', _prices)\n            return _prices\n        }\n    }\n}\n","import { render } from \"./Keyspaces.vue?vue&type=template&id=5b9ef9f6&bindings={\\\"workload\\\":\\\"props\\\",\\\"prices\\\":\\\"options\\\"}\"\nimport script from \"./Keyspaces.vue?vue&type=script&lang=ts\"\nexport * from \"./Keyspaces.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n<div class=\"pricing container\" id=\"datastax-astra\">\n    <h1>Astra</h1>\n    <form>\n        <dropdown v-model=\"replicationFactor\" readonly :options=\"[3, 4, 5]\" description=\"Replication factor\"></dropdown>\n        <dropdown v-model=\"tier\" :options=\"tiers.concat('AUTOSELECT')\" description=\"Tier\"></dropdown>\n    </form>\n    <template v-if=\"cluster\">\n        <template v-for=\"price in prices\" :key=\"price.id\">\n        <div class=\"row container\">\n            <a data-toggle=\"collapse\" :href=\"'#astra-' + price.id + '-price'\" aria-expanded=\"false\" :aria-controls=\"'astra' + price.id + '-price'\">{{price.name}}: {{price.total.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</a>\n            <div class=\"collapse\" :id=\"'astra-' + price.id + '-price'\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Cluster nodes</td>\n                            <td>{{price.total.toLocaleString(undefined, {style: 'currency', currency: 'USD'})}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </template>\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <button class=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#astra-details\" aria-expanded=\"true\" aria-controls=\"astra-details\">More details</button>\n            </div>\n            <div class=\"collapse\" id=\"astra-details\">\n                <h3>Cluster capacity</h3>\n                <table class=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Storage (post replication)</td>\n                            <td>{{clusterCapacity.dataset.toLocaleString()}} GB</td>\n                        </tr>\n                        <tr>\n                            <td>Sustained throughput</td>\n                            <td>{{clusterCapacity.sustainedLoad.toLocaleString()}} ops/sec</td>\n                        </tr>\n                        <tr>\n                            <td>Peak throughput</td>\n                            <td>{{clusterCapacity.peakLoad.toLocaleString()}} ops/sec</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>Cluster specs</h3>\n                <table class=\"table\">\n                    <tbody>\n                        <tr>\n                            <td>Capacity units</td>\n                            <td>{{cluster.capacityUnits}} x {{cluster.instanceType.name}} <small>({{cluster.instanceType.vcpu.toLocaleString()}} vCPUs, {{cluster.instanceType.memory.toLocaleString()}}GB RAM, {{cluster.instanceType.storage.toLocaleString()}}GB storage)</small></td>\n                        </tr>\n                        <tr>\n                            <td>Total vCPU</td>\n                            <td>{{clusterCapacity.vcpu.toLocaleString()}}</td>\n                        </tr>\n                    </tbody>\n                </table>            \n            </div>\n        </div>\n    </template>\n    <div class=\"alert alert-warning\" v-else>\n        <p>Could not find suitable configuration</p>\n    </div>\n</div>    \n</template>\n\n<script lang=\"ts\">\nimport {defineComponent, DefineComponent, h} from 'vue'\nimport Dropdown from './Dropdown.vue'\nimport { WorkloadSpec, hoursPerMonth } from '../common'\nimport _ from 'lodash'\n\nexport interface PerfModeData {\n    reads: number;\n    writes: number;\n}\n\n\nconst vcpuPerf: PerfModeData = {\n    reads: 1500,\n    writes: 1700\n}\n\nconst RAMtoDiskRatio = 30\n\n\ninterface ResourceSpec {\n    readonly vcpu: number;\n    readonly memory: number;\n    readonly storage: number;\n}\n\ninterface Instance extends ResourceSpec {\n    readonly name: string; \n    readonly hourlyPrice: HourlyPrice;\n}\n\ninterface ClusterSpec {\n    readonly capacityUnits: number;\n    readonly instanceType: Instance;\n}\n\ntype HourlyPrice = number\ntype MonthlyPrice = number\n\nconst instanceTypes = [\n    {\"name\": \"C10\", \"vcpu\": 12, \"memory\": 48, \"storage\": 500, \"hourlyPrice\": 2.25},\n    {\"name\": \"C20\", \"vcpu\": 24, \"memory\": 96, \"storage\": 500, \"hourlyPrice\": 3.1},\n    {\"name\": \"C40\", \"vcpu\": 48, \"memory\": 192, \"storage\": 500, \"hourlyPrice\": 4.9},\n    {\"name\": \"D10\", \"vcpu\": 12, \"memory\": 48, \"storage\": 1536, \"hourlyPrice\": 5.42},\n    {\"name\": \"D20\", \"vcpu\": 24, \"memory\": 96, \"storage\": 1536, \"hourlyPrice\": 6.69},\n    {\"name\": \"D40\", \"vcpu\": 48, \"memory\": 192, \"storage\": 1536, \"hourlyPrice\": 9.86}\n]\n\nfunction toMonthlyPrice(price: HourlyPrice): MonthlyPrice {\n    return price * hoursPerMonth\n}\n\nfunction clusterPrice(clusterSpec: ClusterSpec): MonthlyPrice {\n    return toMonthlyPrice(clusterSpec.instanceType.hourlyPrice)*clusterSpec.capacityUnits    \n}\n\nfunction clusterResources(cluster: ClusterSpec): ResourceSpec {\n    return {storage: cluster.instanceType.storage*cluster.capacityUnits, vcpu: cluster.instanceType.vcpu*cluster.capacityUnits, memory:cluster.instanceType.memory*cluster.capacityUnits}\n}\n\nfunction itemSizePerfFactor(itemSize: number): number {\n    if (itemSize <= 10) {\n        return 1\n    } else if (itemSize < 100) {\n        return 0.75\n    } else if (itemSize < 1000) {\n        return 0.5\n    } else {\n        return 0.25\n    }\n}\n\n/* Cluster size recommendations based on the optimization target:\n- performance (CPU) - select nodes with enough storage and max cpu\n- storage - select nodes with enough cpu and max storage\n- cost - select nodes with just enough cpu and storage, even if smaller nodes\n*/\n\nfunction selectClusterInstances(specs: ResourceSpec, replicationFactor: number, tier: string): ClusterSpec | undefined {\n    const validSpecs: ClusterSpec[] = []\n\n    for (const n of _.range(1, 500)) {\n        for (const instanceType of instanceTypes) {\n            if ((tier == 'AUTOSELECT' && instanceType.vcpu * n > specs.vcpu && instanceType.memory * n > specs.memory && instanceType.storage * n > specs.storage) \n                ||\n               (instanceType.name == tier && instanceType.vcpu * n > specs.vcpu && instanceType.storage * n > specs.storage)\n            ) {\n                validSpecs.push({instanceType, capacityUnits: n})\n            }\n        }\n    }\n\n    const lowestPrice = _.chain(validSpecs).map(clusterPrice).min().value()\n    const x = _.chain(validSpecs).filter()\n\n    return _.chain(validSpecs)\n        .filter((spec) => clusterPrice(spec) < (lowestPrice * 1.2))\n        .sortBy('capacityUnits')\n        .head()\n        .value()\n\n}\n\nconst data = {\n    replicationFactor: 3,\n    tier: 'AUTOSELECT',\n    tiers: instanceTypes.map(({name}) => name)\n}\n\nexport default defineComponent({\n    data() {\n        return data\n    },\n    props: ['workload'],\n    components: {\n        dropdown: Dropdown\n    },\n    computed: {\n        estimatedResources: (vm: DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            const vcpus = Math.ceil((workload.reads / vcpuPerf.reads + workload.writes / vcpuPerf.writes)*replicationFactor/itemSizePerfFactor(workload.itemSize))\n            const memory = Math.ceil(workload.storage / RAMtoDiskRatio)*replicationFactor\n            return {vcpu: vcpus, storage: workload.storage, memory}\n        },\n        cluster: (vm: DefineComponent): ClusterSpec | undefined => {\n            return selectClusterInstances(vm.estimatedResources, vm.replicationFactor, vm.tier)\n        },\n        clusterCapacity: (vm: DefineComponent) => {\n            const cluster: ClusterSpec = vm.cluster\n            const totalResources = clusterResources(cluster)\n            const dataset = totalResources.storage\n            const peakLoad = totalResources.vcpu * (vcpuPerf.writes + vcpuPerf.reads)/2 / vm.replicationFactor\n            const sustainedLoad = peakLoad * 0.66\n\n            return {sustainedLoad, peakLoad, dataset, ...totalResources}\n        },\n        prices: (vm: DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            const cluster: ClusterSpec = vm.cluster!\n            const price = clusterPrice(cluster)\n\n            const _prices = [\n                {id: 'ondemand', name: 'On demand', total: price, database: 'Astra'}\n            ]\n\n            vm.$emit('update:modelValue', _prices)\n            return _prices\n        }\n    },\n    render() {\n        console.log(\"render\")\n        if (_.isEmpty(this.cluster)) {\n           return h('p', 'No suitable cluster could be slected')\n        } else {\n            return this.$slots.default\n        }\n    }\n})\n\n/* TODO: \n4. show peak workload capability \n*/\n</script>\n\n ","\nimport {defineComponent, DefineComponent, h} from 'vue'\nimport Dropdown from './Dropdown.vue'\nimport { WorkloadSpec, hoursPerMonth } from '../common'\nimport _ from 'lodash'\n\nexport interface PerfModeData {\n    reads: number;\n    writes: number;\n}\n\n\nconst vcpuPerf: PerfModeData = {\n    reads: 1500,\n    writes: 1700\n}\n\nconst RAMtoDiskRatio = 30\n\n\ninterface ResourceSpec {\n    readonly vcpu: number;\n    readonly memory: number;\n    readonly storage: number;\n}\n\ninterface Instance extends ResourceSpec {\n    readonly name: string; \n    readonly hourlyPrice: HourlyPrice;\n}\n\ninterface ClusterSpec {\n    readonly capacityUnits: number;\n    readonly instanceType: Instance;\n}\n\ntype HourlyPrice = number\ntype MonthlyPrice = number\n\nconst instanceTypes = [\n    {\"name\": \"C10\", \"vcpu\": 12, \"memory\": 48, \"storage\": 500, \"hourlyPrice\": 2.25},\n    {\"name\": \"C20\", \"vcpu\": 24, \"memory\": 96, \"storage\": 500, \"hourlyPrice\": 3.1},\n    {\"name\": \"C40\", \"vcpu\": 48, \"memory\": 192, \"storage\": 500, \"hourlyPrice\": 4.9},\n    {\"name\": \"D10\", \"vcpu\": 12, \"memory\": 48, \"storage\": 1536, \"hourlyPrice\": 5.42},\n    {\"name\": \"D20\", \"vcpu\": 24, \"memory\": 96, \"storage\": 1536, \"hourlyPrice\": 6.69},\n    {\"name\": \"D40\", \"vcpu\": 48, \"memory\": 192, \"storage\": 1536, \"hourlyPrice\": 9.86}\n]\n\nfunction toMonthlyPrice(price: HourlyPrice): MonthlyPrice {\n    return price * hoursPerMonth\n}\n\nfunction clusterPrice(clusterSpec: ClusterSpec): MonthlyPrice {\n    return toMonthlyPrice(clusterSpec.instanceType.hourlyPrice)*clusterSpec.capacityUnits    \n}\n\nfunction clusterResources(cluster: ClusterSpec): ResourceSpec {\n    return {storage: cluster.instanceType.storage*cluster.capacityUnits, vcpu: cluster.instanceType.vcpu*cluster.capacityUnits, memory:cluster.instanceType.memory*cluster.capacityUnits}\n}\n\nfunction itemSizePerfFactor(itemSize: number): number {\n    if (itemSize <= 10) {\n        return 1\n    } else if (itemSize < 100) {\n        return 0.75\n    } else if (itemSize < 1000) {\n        return 0.5\n    } else {\n        return 0.25\n    }\n}\n\n/* Cluster size recommendations based on the optimization target:\n- performance (CPU) - select nodes with enough storage and max cpu\n- storage - select nodes with enough cpu and max storage\n- cost - select nodes with just enough cpu and storage, even if smaller nodes\n*/\n\nfunction selectClusterInstances(specs: ResourceSpec, replicationFactor: number, tier: string): ClusterSpec | undefined {\n    const validSpecs: ClusterSpec[] = []\n\n    for (const n of _.range(1, 500)) {\n        for (const instanceType of instanceTypes) {\n            if ((tier == 'AUTOSELECT' && instanceType.vcpu * n > specs.vcpu && instanceType.memory * n > specs.memory && instanceType.storage * n > specs.storage) \n                ||\n               (instanceType.name == tier && instanceType.vcpu * n > specs.vcpu && instanceType.storage * n > specs.storage)\n            ) {\n                validSpecs.push({instanceType, capacityUnits: n})\n            }\n        }\n    }\n\n    const lowestPrice = _.chain(validSpecs).map(clusterPrice).min().value()\n    const x = _.chain(validSpecs).filter()\n\n    return _.chain(validSpecs)\n        .filter((spec) => clusterPrice(spec) < (lowestPrice * 1.2))\n        .sortBy('capacityUnits')\n        .head()\n        .value()\n\n}\n\nconst data = {\n    replicationFactor: 3,\n    tier: 'AUTOSELECT',\n    tiers: instanceTypes.map(({name}) => name)\n}\n\nexport default defineComponent({\n    data() {\n        return data\n    },\n    props: ['workload'],\n    components: {\n        dropdown: Dropdown\n    },\n    computed: {\n        estimatedResources: (vm: DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            const vcpus = Math.ceil((workload.reads / vcpuPerf.reads + workload.writes / vcpuPerf.writes)*replicationFactor/itemSizePerfFactor(workload.itemSize))\n            const memory = Math.ceil(workload.storage / RAMtoDiskRatio)*replicationFactor\n            return {vcpu: vcpus, storage: workload.storage, memory}\n        },\n        cluster: (vm: DefineComponent): ClusterSpec | undefined => {\n            return selectClusterInstances(vm.estimatedResources, vm.replicationFactor, vm.tier)\n        },\n        clusterCapacity: (vm: DefineComponent) => {\n            const cluster: ClusterSpec = vm.cluster\n            const totalResources = clusterResources(cluster)\n            const dataset = totalResources.storage\n            const peakLoad = totalResources.vcpu * (vcpuPerf.writes + vcpuPerf.reads)/2 / vm.replicationFactor\n            const sustainedLoad = peakLoad * 0.66\n\n            return {sustainedLoad, peakLoad, dataset, ...totalResources}\n        },\n        prices: (vm: DefineComponent) => {\n            const workload: WorkloadSpec = vm.workload\n            const replicationFactor = vm.replicationFactor\n            const cluster: ClusterSpec = vm.cluster!\n            const price = clusterPrice(cluster)\n\n            const _prices = [\n                {id: 'ondemand', name: 'On demand', total: price, database: 'Astra'}\n            ]\n\n            vm.$emit('update:modelValue', _prices)\n            return _prices\n        }\n    },\n    render() {\n        console.log(\"render\")\n        if (_.isEmpty(this.cluster)) {\n           return h('p', 'No suitable cluster could be slected')\n        } else {\n            return this.$slots.default\n        }\n    }\n})\n\n/* TODO: \n4. show peak workload capability \n*/\n","import { render } from \"./Astra.vue?vue&type=template&id=3eebef38&bindings={}\"\nimport script from \"./Astra.vue?vue&type=script&lang=ts\"\nexport * from \"./Astra.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n    <div :id=\"id\"></div>\n</template>\n\n<script>\nimport c3 from 'c3'\nimport _ from 'lodash'\n\nfunction toGraphData(data) {\n    return {\n        type: 'bar',\n        columns: data || [],\n        color: (color, d) => _.startsWith(d.id ? d.id : d, 'Scylla') ? 'blue' : 'red' \n    }\n}\n\nexport default {\n    props: ['data', 'name', 'xlabel', 'ylabel'],\n    computed: {\n        id() {\n            return `chart-${this.name}`\n        }\n    },\n    mounted() {\n        this._chart = c3.generate({\n            bindto: '#' + this.id,\n            data: toGraphData(this.data),\n            point: {\n                show: false\n            },\n            axis: {\n                x: {\n                    label: this.xlabel,\n                    type: 'category'\n                },\n                y: {\n                    label: this.ylabel\n                }\n            }\n        })\n    },\n    watch: {\n        data(_data) {\n            if (!_.isEmpty(_data)) {\n                this._chart.load({...toGraphData(_data), unload: true})\n            }\n        }\n    }\n}\n</script>","import { render } from \"./Chart.vue?vue&type=template&id=762b7ddf&bindings={\\\"data\\\":\\\"props\\\",\\\"name\\\":\\\"props\\\",\\\"xlabel\\\":\\\"props\\\",\\\"ylabel\\\":\\\"props\\\",\\\"id\\\":\\\"options\\\"}\"\nimport script from \"./Chart.vue?vue&type=script&lang=js\"\nexport * from \"./Chart.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","\nimport ScyllaCloud from './components/ScyllaCloud.vue'\nimport DynamoDB from './components/DynamoDB.vue'\nimport Keyspaces from './components/Keyspaces.vue'\nimport Dropdown from './components/Dropdown.vue'\nimport Astra from './components/Astra.vue'\nimport _ from 'lodash'\nimport {ComponentPublicInstance, DefineComponent, defineComponent} from 'vue'\nimport Chart from './components/Chart.vue'\n\nexport default defineComponent({\n    data() {\n        return {\n            scyllaCalcs: {'Scylla cloud': 'ScyllaCloud'},\n            rivalCalcs: {'DynamoDB': 'DynamoDB', 'Keyspaces': 'keyspaces', 'Astra': 'Astra'},\n            workload: {writes: 10000, reads: 50000, storage: 200, itemSize: 1},\n            calc1: 'ScyllaCloud',\n            calc2: 'DynamoDB',\n            scyllaPrices: [],\n            rivalPrices: []\n        }\n    },\n    components: {\n        ScyllaCloud,\n        DynamoDB,\n        Keyspaces,\n        Astra,\n        Dropdown,\n        Chart\n    },\n    methods: {\n        copyLink() {\n            const url = new URL(window.location.href)\n            _.forEach(this.workload, (v, k) => {\n                url.searchParams.set(k, v.toString())\n            })\n\n            navigator.clipboard.writeText(url.toString())\n            .then(() => {\n                document.querySelector('#copy-indicator')?.classList.add('show')\n                setTimeout(() => {\n                    document.querySelector('#copy-indicator')?.classList.remove('show')\n                }, 1000)\n            })\n        }\n    },\n    mounted() {\n        const query = new URLSearchParams(window.location.search)\n        const getParam = (param: string, defaultValue: number) => _.toNumber(query.get(param) ?? defaultValue)\n        this.workload = _.mapValues(this.workload, (v, k) => getParam(k, v))\n    },\n    errorCaptured(err: unknown, instance: ComponentPublicInstance | null, info: string): boolean {\n        console.error(\"Error occurred in Astra component \" + err)\n        return false\n    },\n    computed: {\n        prices(vm: DefineComponent) {\n            const _prices: [string, number][] = []\n            for (const price of vm.scyllaPrices) {\n                const key: string = 'Scylla ' + price.name\n                _prices.push([key, price.total])\n            }\n\n            for (const price of vm.rivalPrices) {\n                _prices.push([price.database + ' ' + price.name, price.total])\n            }\n            return _prices\n        }\n    }\n})\n","import { render } from \"./Calculator.vue?vue&type=template&id=6167dbc6&bindings={}\"\nimport script from \"./Calculator.vue?vue&type=script&lang=ts\"\nexport * from \"./Calculator.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport Calculator from './Calculator.vue'\ncreateApp(Calculator).mount('#app')\n"],"sourceRoot":""}